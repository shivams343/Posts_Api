{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakesh Roshan\\\\Desktop\\\\react-yt\\\\my_app\\\\src\\\\components\\\\DataFetchingTwo.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst initialState = {\n  loading: true,\n  error: '',\n  posts: {}\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_SUCCESS':\n      return {\n        loading: false,\n        posts: action.payload,\n        error: \"\"\n      };\n\n    case \"FETCH_ERROR\":\n      return {\n        loading: false,\n        posts: {},\n        error: \"Something went wrong\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction DataFetchingTwo() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    axios.get(`https://jsonplaceholder.typicode.com/posts`).then(response => {\n      dispatch({\n        type: 'FETCH_SUCCESS',\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: \"FETCH_ERROR\",\n        payload: {}\n      });\n    });\n  }, []);\n  console.log(state.posts);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, state.loading ? 'loading' : state.posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }, \" \", post.title)), state.error ? 'error' : null);\n}\n\nexport default DataFetchingTwo;","map":{"version":3,"sources":["C:/Users/Rakesh Roshan/Desktop/react-yt/my_app/src/components/DataFetchingTwo.js"],"names":["React","useReducer","useEffect","axios","initialState","loading","error","posts","reducer","state","action","type","payload","DataFetchingTwo","dispatch","get","then","response","data","catch","console","log","map","post","id","title"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,OAAO,EAAC,IADO;AAEfC,EAAAA,KAAK,EAAC,EAFS;AAGfC,EAAAA,KAAK,EAAC;AAHS,CAAnB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC5B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAM;AACFN,QAAAA,OAAO,EAAC,KADN;AAEFE,QAAAA,KAAK,EAACG,MAAM,CAACE,OAFX;AAGFN,QAAAA,KAAK,EAAC;AAHJ,OAAN;;AAKJ,SAAK,aAAL;AACI,aAAM;AACFD,QAAAA,OAAO,EAAC,KADN;AAEFE,QAAAA,KAAK,EAAC,EAFJ;AAGDD,QAAAA,KAAK,EAAC;AAHL,OAAN;;AAMJ;AACI,aAAOG,KAAP;AAfR;AAiBH,CAlBD;;AAqBA,SAASI,eAAT,GAA2B;AACvB,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBb,UAAU,CAACO,OAAD,EAAUJ,YAAV,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACY,GAAN,CAAW,4CAAX,EACCC,IADD,CACMC,QAAQ,IAAG;AACbH,MAAAA,QAAQ,CAAC;AAACH,QAAAA,IAAI,EAAC,eAAN;AAAsBC,QAAAA,OAAO,EAACK,QAAQ,CAACC;AAAvC,OAAD,CAAR;AACH,KAHD,EAGGC,KAHH,CAGSb,KAAK,IAAE;AACZQ,MAAAA,QAAQ,CAAC;AAACH,QAAAA,IAAI,EAAC,aAAN;AAAoBC,QAAAA,OAAO,EAAC;AAA5B,OAAD,CAAR;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AAQAQ,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACF,KAAlB;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,KAAK,CAACJ,OAAN,GAAe,SAAf,GACDI,KAAK,CAACF,KAAN,CAAYe,GAAZ,CAAgBC,IAAI,iBAAI;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqBD,IAAI,CAACE,KAA1B,CAAxB,CAFJ,EAIKhB,KAAK,CAACH,KAAN,GAAa,OAAb,GAAqB,IAJ1B,CADJ;AAQH;;AAED,eAAeO,eAAf","sourcesContent":["import React,{useReducer,useEffect} from 'react'\r\nimport axios from 'axios';\r\n\r\nconst initialState={\r\n    loading:true,\r\n    error:'',\r\n    posts:{}\r\n}\r\nconst reducer = (state,action)=>{\r\n    switch(action.type){\r\n        case 'FETCH_SUCCESS':\r\n            return{\r\n                loading:false,\r\n                posts:action.payload,\r\n                error:\"\"\r\n            }\r\n        case \"FETCH_ERROR\":\r\n            return{\r\n                loading:false,\r\n                posts:{},\r\n                 error:\"Something went wrong\"\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nfunction DataFetchingTwo() {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://jsonplaceholder.typicode.com/posts`)\r\n        .then(response =>{\r\n            dispatch({type:'FETCH_SUCCESS',payload:response.data})\r\n        }).catch(error=>{\r\n            dispatch({type:\"FETCH_ERROR\",payload:{}})\r\n        })\r\n    }, [])\r\n    console.log(state.posts)\r\n\r\n    return (\r\n        <div>\r\n            {state.loading? 'loading':\r\n            state.posts.map(post => <div key={post.id}> {post.title}</div>)\r\n            }\r\n            {state.error? 'error':null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataFetchingTwo\r\n"]},"metadata":{},"sourceType":"module"}